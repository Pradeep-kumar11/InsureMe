pipeline {
  agent any
  tools {
    maven 'Apache Maven 3.8.7'
  }
  stages {
    stage('Git checkout') {
      steps {
        echo 'This is for cloning the git repo'
        git branch: 'main', url: 'https://github.com/Pradeep-kumar11/InsureMe'
      }
    }
    stage('Maven Package') {
      steps {
        echo 'This is for packaging the application'
        sh 'mvn package'
      }
    }
    stage('Test Results') {
      steps {
        echo 'This is for displaying test results'
        publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, icon: '', 
        keepAll: false, reportDir: '/var/lib/jenkins/workspace/InsureMe/target/surefire-reports', 
        reportFiles: 'index.html', reportName: 'HTML Report', reportTitles: '', 
        useWrapperFileDirectly: true])
      }
    }
    stage('Docker Image Creation') {

      steps {
        echo 'This is for Docker image build'
        sh 'docker build -t pradeep781/insureme:1.0 .'
      }
    }
    stage('Login to Dockerhub') {
      steps {
        withCredentials([usernamePassword(credentialsId: 'dockercode', usernameVariable: 'docker_user', passwordVariable: 'docker_pass')]) {
          echo 'Logging in to DockerHub...'
          sh 'echo $docker_pass | docker login -u $docker_user --password-stdin'
        }
      }
    }
    stage('Push the Docker image') {
      steps {
        echo 'This is for pushing Docker image to DockerHub'
        sh 'docker push pradeep781/insureme:1.0'
      }
    }
    stage('Run Ansible Playbook') {
      steps {
        ansiblePlaybook credentialsId: 'sshkey', disableHostKeyChecking: true, installation: 'ansible', 
        inventory: '/etc/ansible/hosts', playbook: 'deploy.yml', vaultTmpPath: ''
      }
    }
  }
}
